@book{compilers-princeples,
  author    = {Aho, Alfred V. and Lam, Monica S. and Sethi, Ravi and Ullman, Jeffrey D.},
  location  = {Boston, MA, USA},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  date      = {2006},
  isbn      = {0321486811},
  langid    = {english},
  title     = {Compilers: Principles, Techniques, and Tools (2Nd Edition)},
}

@inproceedings{nemchenko-kmu,
  author    = {Немченко, Евгений},
  booktitle = {X сессия научной школы <<Технологии программирования, искусственный интеллект, биоинформатика>>},
  date      = {2019},
  langid    = {russian},
  title     = {Поддержка функций высших порядков в языке KPHP},
}

@book{hhvm,
  author    = {Yamauchi, Owen},
  publisher = {O'Reilly Media, Inc.},
  date      = {2015},
  edition   = {1st},
  isbn      = {1491920874, 9781491920879},
  langid    = {english},
  title     = {Hack and HHVM: Programming Productivity Without Breaking Things},
}

@book{php7,
  author = {Pichler, Thomas},
  url    = {https://leanpub.com/php7fromscratch},
  date   = {2017},
  langid = {english},
  title  = {PHP 7 from Scratch},
}

@article{kphp-vk-2013,
  author = {Скуратов, Фёдор},
  url    = {https://habr.com/ru/post/187214/},
  date   = {2013},
  langid = {russian},
  title  = {KPHP от ВКонтакте},
}

@article{fp-matters,
  abstract     = {{As software becomes more and more complex, it is more and more important to structure it well. Well-structured software is easy to write, easy to debug, and provides a collection of modules that can be re-used to reduce future programming costs. Conventional languages place conceptual limits on the way problems can be modularised. Functional languages push those limits back. In this paper we show that two features of functional languages in particular, higher-order functions and lazy evaluation, can contribute greatly to modularity. As examples, we manipulate lists and trees, program several numerical algorithms, and implement the alpha-beta heuristics (an Artificial Intelligence algorithm used in game-playing programs). Since modularity is the key to successful programming, functional languages are vitally important to the real world.}},
  author       = {Hughes, J.},
  url          = {https://doi.org/10.1093/comjnl/32.2.98},
  date         = {1989-01},
  doi          = {10.1093/comjnl/32.2.98},
  eprint       = {http://oup.prod.sis.lan/comjnl/article-pdf/32/2/98/1445644/320098.pdf},
  issn         = {0010-4620},
  journaltitle = {The Computer Journal},
  langid       = {english},
  number       = {2},
  pages        = {98--107},
  title        = {{Why Functional Programming Matters}},
  volume       = {32},
}

@article{sloccount,
  author = {Wheeler, David A.},
  url    = {https://dwheeler.com/sloccount/sloccount.html},
  date   = {2004},
  langid = {english},
  title  = {SLOCCount User's Guide},
  url    = {https://dwheeler.com/sloccount/sloccount.html},
}
